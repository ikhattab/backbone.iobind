// Generated by CoffeeScript 1.6.2
(function() {
  var AppRouter, Todo, TodoList, TodoListForm, TodoListItem, Todos, root, _ref, _ref1, _ref2, _ref3, _ref4, _ref5,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  root = typeof exports !== "undefined" && exports !== null ? exports : this;

  root.socket = io.connect('http://localhost');

  AppRouter = (function(_super) {
    __extends(AppRouter, _super);

    function AppRouter() {
      _ref = AppRouter.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    AppRouter.prototype.routes = {
      '': 'index',
      '/': 'index'
    };

    AppRouter.prototype.index = function() {
      var form, list, todos;

      todos = new Todos;
      form = new TodoListForm(todos);
      $('#TodoWrapper').append(form.el);
      list = new TodoList(todos);
      $('#TodoWrapper').append(list.el);
      return todos.fetch();
    };

    return AppRouter;

  })(Backbone.Router);

  Todo = (function(_super) {
    __extends(Todo, _super);

    function Todo() {
      _ref1 = Todo.__super__.constructor.apply(this, arguments);
      return _ref1;
    }

    Todo.prototype.urlRoot = 'todo';

    Todo.prototype.noIoBind = false;

    Todo.prototype.socket = root.socket;

    Todo.prototype.initialize = function() {
      _.bindAll(this, 'serverChange', 'serverDelete', 'modelCleanup');
      if (!this.noIoBind) {
        this.ioBind('update', this.serverChange, this);
        return this.ioBind('delete', this.serverDelete, this);
      }
    };

    Todo.prototype.serverChange = function(data) {
      data.fromServer = true;
      return this.set(data);
    };

    Todo.prototype.serverDelete = function(data) {
      if (this.collection) {
        this.collection.remove(this);
      } else {
        this.trigger('remove', this);
      }
      return this.modelCleanup();
    };

    Todo.prototype.modelCleanup = function() {
      this.ioUnbindAll();
      return this;
    };

    return Todo;

  })(Backbone.Model);

  Todos = (function(_super) {
    __extends(Todos, _super);

    function Todos() {
      _ref2 = Todos.__super__.constructor.apply(this, arguments);
      return _ref2;
    }

    Todos.prototype.model = Todo;

    Todos.prototype.url = 'todos';

    Todos.prototype.socket = root.socket;

    Todos.prototype.initialize = function() {
      _.bindAll(this, 'serverCreate', 'collectionCleanup');
      return this.ioBind('create', this.serverCreate, this);
    };

    Todos.prototype.serverCreate = function(data) {
      var exists;

      exists = this.get(data['id']);
      if (!exists) {
        return this.add(data);
      } else {
        data.fromServer = true;
        return exists.set(data);
      }
    };

    Todos.prototype.collectionCleanup = function() {
      this.ioUnbindAll();
      this.forEach(function(model) {
        return model.modeleCleanup();
      });
      return this;
    };

    return Todos;

  })(Backbone.Collection);

  TodoList = (function(_super) {
    __extends(TodoList, _super);

    function TodoList() {
      this.render = __bind(this.render, this);      _ref3 = TodoList.__super__.constructor.apply(this, arguments);
      return _ref3;
    }

    TodoList.prototype.id = 'TodoList';

    TodoList.prototype.initialize = function(todos) {
      this.todos = todos;
      _.bindAll(this, 'render', 'addTodo', 'removeTodo');
      this.todos.bind("reset", this.render);
      this.todos.bind("add", this.addTodo);
      this.todos.bind("remove", this.removeTodo);
      return this.render();
    };

    TodoList.prototype.render = function() {
      var _this = this;

      this.todos.forEach(function(todo) {
        return _this.addTodo(todo);
      });
      return this;
    };

    TodoList.prototype.addTodo = function(todo) {
      var tdv;

      tdv = new TodoListItem({
        model: todo
      });
      return this.$el.append(tdv.el);
    };

    TodoList.prototype.removeTodo = function(todo) {
      var self, width;

      self = this;
      width = this.$("#" + todo.id).outerWidth();
      this.$("#" + todo.id).css("width", width + "px");
      return this.$("#" + todo.id).animate({
        "margin-left": width,
        opacity: 0
      }, 200, function() {
        return self.$("#" + todo.id).animate({
          height: 0
        }, 200, function() {
          return self.$("#" + todo.id).remove();
        });
      });
    };

    return TodoList;

  })(Backbone.View);

  TodoListItem = (function(_super) {
    __extends(TodoListItem, _super);

    function TodoListItem() {
      _ref4 = TodoListItem.__super__.constructor.apply(this, arguments);
      return _ref4;
    }

    TodoListItem.prototype.className = 'todo';

    TodoListItem.prototype.events = {
      'click .complete': 'completeTodo',
      'click .delete': 'deleteTodo'
    };

    TodoListItem.prototype.initialize = function() {
      _.bindAll(this, 'setStatus', 'completeTodo', 'deleteTodo');
      this.model.bind('change:complete', this.setStatus);
      return this.render();
    };

    TodoListItem.prototype.render = function() {
      this.$el.html(template.item(this.model.toJSON()));
      this.$el.attr("id", this.model.id);
      this.setStatus();
      return this;
    };

    TodoListItem.prototype.setStatus = function() {
      var status;

      status = this.model.get('completed');
      if (status) {
        return this.$el.addClass('complete');
      } else {
        return this.$el.removeClass('complete');
      }
    };

    TodoListItem.prototype.completeTodo = function() {
      var status;

      status = this.model.get('completed');
      return this.model.save({
        'completed': !status
      });
    };

    TodoListItem.prototype.deleteTodo = function() {
      console.log('sssssss');
      return this.model.destroy({
        silent: true
      });
    };

    return TodoListItem;

  })(Backbone.View);

  TodoListForm = (function(_super) {
    __extends(TodoListForm, _super);

    function TodoListForm() {
      _ref5 = TodoListForm.__super__.constructor.apply(this, arguments);
      return _ref5;
    }

    TodoListForm.prototype.id = 'TodoForm';

    TodoListForm.prototype.events = {
      'click .button#add': 'addTodo'
    };

    TodoListForm.prototype.initialize = function(todos) {
      this.todos = todos;
      _.bindAll(this, 'addTodo');
      return this.render();
    };

    TodoListForm.prototype.render = function() {
      this.$el.html(template.form());
      return this;
    };

    TodoListForm.prototype.addTodo = function() {
      var attrs, _todo;

      Todo = Todo.extend({
        noIoBind: true
      });
      attrs = {
        title: this.$('#TodoInput input[name="TodoInput"]').val(),
        complete: false
      };
      this.$("#TodoInput input[name=\"TodoInput\"]").val("");
      _todo = new Todo(attrs);
      return _todo.save();
    };

    return TodoListForm;

  })(Backbone.View);

  $(function() {
    var app;

    app = new AppRouter;
    return Backbone.history.start();
  });

}).call(this);

/*
//@ sourceMappingURL=example.map
*/
